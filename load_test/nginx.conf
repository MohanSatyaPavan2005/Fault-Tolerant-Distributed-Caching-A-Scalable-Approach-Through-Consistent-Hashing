upstream cache_masters {
    # Use least connections balancing algorithm for optimal distribution
    least_conn;
    
    # Master node servers with weights and max_fails parameters
    server master-1:8000 max_fails=3 fail_timeout=30s;
    server master-2:8000 max_fails=3 fail_timeout=30s;
    server master-3:8000 max_fails=3 fail_timeout=30s;
    
    # Keepalive connections for better performance
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;
    
    # Access log with buffer for better performance
    access_log /var/log/nginx/access.log combined buffer=64k flush=5s;
    
    # Error log
    error_log /var/log/nginx/error.log;
    
    # Increase timeout values to handle high load
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 75s;
    send_timeout 60s;
    
    # Set appropriate buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    
    # For regular web content
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
    }
    
    # Route /cache/ endpoints to master nodes
    location /cache/ {
        # Rewrite the URI to strip the /cache/ prefix
        rewrite ^/cache/(.*)$ /$1 break;
        
        # Pass requests to upstream load balancer
        proxy_pass http://cache_masters;
        
        # Set proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configure proxy timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Enable keepalive connections
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Set appropriate buffer sizes
        proxy_buffers 16 32k;
        proxy_buffer_size 32k;
        
        # Enable request body buffering
        proxy_request_buffering on;
        
        # Enable response body buffering
        proxy_buffering on;
        
        # Enable caching for GET requests
        proxy_cache_methods GET;
        
        # Pass cache-specific headers
        proxy_set_header Cache-Control $http_cache_control;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        
        # Health check (accessible at /cache/health)
        health_check interval=5s fails=3 passes=2 uri=/health;
    }
    
    # Additional route for auxiliary nodes if needed
    location /aux/ {
        # Define a separate upstream block for auxiliary nodes if needed
        # proxy_pass http://cache_auxiliaries;
        return 404; # Placeholder - implement if needed
    }
    
    # Monitoring endpoint for Nginx stats
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
    
    # Error handling
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

